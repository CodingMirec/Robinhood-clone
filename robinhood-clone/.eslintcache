[{"C:\\Users\\Mirec\\Desktop\\CodingMirec\\Clones\\Robinhood-clone\\robinhood-clone\\src\\index.js":"1","C:\\Users\\Mirec\\Desktop\\CodingMirec\\Clones\\Robinhood-clone\\robinhood-clone\\src\\App.js":"2","C:\\Users\\Mirec\\Desktop\\CodingMirec\\Clones\\Robinhood-clone\\robinhood-clone\\src\\reportWebVitals.js":"3","C:\\Users\\Mirec\\Desktop\\CodingMirec\\Clones\\Robinhood-clone\\robinhood-clone\\src\\Header.js":"4","C:\\Users\\Mirec\\Desktop\\CodingMirec\\Clones\\Robinhood-clone\\robinhood-clone\\src\\Newsfeed.js":"5","C:\\Users\\Mirec\\Desktop\\CodingMirec\\Clones\\Robinhood-clone\\robinhood-clone\\src\\Stats.js":"6","C:\\Users\\Mirec\\Desktop\\CodingMirec\\Clones\\Robinhood-clone\\robinhood-clone\\src\\LineGraph.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":424,"mtime":1608643098716,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":791,"mtime":1608592841825,"results":"12","hashOfConfig":"9"},{"size":569,"mtime":1608646253003,"results":"13","hashOfConfig":"9"},{"size":1968,"mtime":1608671977005,"results":"14","hashOfConfig":"9"},{"size":2177,"mtime":1608649558200,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1m3gpnk",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":2,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"C:\\Users\\Mirec\\Desktop\\CodingMirec\\Clones\\Robinhood-clone\\robinhood-clone\\src\\index.js",[],["33","34"],"C:\\Users\\Mirec\\Desktop\\CodingMirec\\Clones\\Robinhood-clone\\robinhood-clone\\src\\App.js",[],"C:\\Users\\Mirec\\Desktop\\CodingMirec\\Clones\\Robinhood-clone\\robinhood-clone\\src\\reportWebVitals.js",[],"C:\\Users\\Mirec\\Desktop\\CodingMirec\\Clones\\Robinhood-clone\\robinhood-clone\\src\\Header.js",["35","36","37","38","39","40"],"import React from \"react\";\r\nimport Logo from \"./robinhood__logo.svg\";\r\n\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nimport \"./Header.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header__wrapper\">\r\n      <div className=\"header__logo\">\r\n        <img src={Logo} width={25} />\r\n      </div>\r\n      <div className=\"header__search\">\r\n        <div className=\"header__searchContainer\">\r\n          <SearchIcon />\r\n          <input type=\"text\" placeholder=\"Search\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"header__menuItems\">\r\n        <a href=\"#\">Free Stocks</a>\r\n        <a href=\"#\">Portfolio</a>\r\n        <a href=\"#\">Cash</a>\r\n        <a href=\"#\">Messages</a>\r\n        <a href=\"#\">Account</a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\Mirec\\Desktop\\CodingMirec\\Clones\\Robinhood-clone\\robinhood-clone\\src\\Newsfeed.js",[],"C:\\Users\\Mirec\\Desktop\\CodingMirec\\Clones\\Robinhood-clone\\robinhood-clone\\src\\Stats.js",["41","42","43","44"],"C:\\Users\\Mirec\\Desktop\\CodingMirec\\Clones\\Robinhood-clone\\robinhood-clone\\src\\LineGraph.js",["45"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nimport \"./LineGraph.css\";\r\n\r\nfunction LineGraph() {\r\n  const [graphData, setGraphData] = useState([]);\r\n  const data = [\r\n    {\r\n      x: 10,\r\n      y: 20,\r\n    },\r\n    {\r\n      x: 15,\r\n      y: 10,\r\n    },\r\n    {\r\n      x: 12,\r\n      y: 4,\r\n    },\r\n  ];\r\n\r\n  const createMockData = () => {\r\n    let data = [];\r\n    let value = 50;\r\n    for (var i = 0; i < 366; i++) {\r\n      let date = new Date();\r\n      date.setHours(0, 0, 0, 0);\r\n      date.setDate(i);\r\n      value += Math.round((Math.random() < 0.5 ? 1 : 0) * Math.random() * 10);\r\n      data.push({ x: date, y: value });\r\n    }\r\n    setGraphData(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    createMockData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"linegraph\">\r\n      <Line\r\n        data={{\r\n          datasets: [\r\n            {\r\n              type: \"line\",\r\n              data: graphData,\r\n              backgroundColor: \"black\",\r\n              borderColor: \"#5AC53B\",\r\n              borderWidth: 2,\r\n              pointBorderColor: \"rgba(0, 0, 0, 0)\",\r\n              pointBackgroundColor: \"rgba(0, 0, 0, 0)\",\r\n              pointHoverBackgroundColor: \"#5AC53B\",\r\n              pointHoverBorderColor: \"#000000\",\r\n              pointHoverBorderWidth: 4,\r\n              pointHoverRadius: 6,\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          maintainAspectRatio: false,\r\n          legend: {\r\n            display: false,\r\n          },\r\n          tooltips: {\r\n            mode: \"index\",\r\n            intersect: false,\r\n          },\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                type: \"time\",\r\n                time: {\r\n                  format: \"MM/DD/YY\",\r\n                  tooltipFormat: \"ll\",\r\n                },\r\n                ticks: {\r\n                  display: false,\r\n                },\r\n              },\r\n            ],\r\n            yAxes: [\r\n              {\r\n                ticks: {\r\n                  display: false,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;\r\n",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":12,"column":9,"nodeType":"52","endLine":12,"endColumn":38},{"ruleId":"53","severity":1,"message":"54","line":21,"column":9,"nodeType":"52","endLine":21,"endColumn":21},{"ruleId":"53","severity":1,"message":"54","line":22,"column":9,"nodeType":"52","endLine":22,"endColumn":21},{"ruleId":"53","severity":1,"message":"54","line":23,"column":9,"nodeType":"52","endLine":23,"endColumn":21},{"ruleId":"53","severity":1,"message":"54","line":24,"column":9,"nodeType":"52","endLine":24,"endColumn":21},{"ruleId":"53","severity":1,"message":"54","line":25,"column":9,"nodeType":"52","endLine":25,"endColumn":21},{"ruleId":"55","severity":1,"message":"56","line":10,"column":10,"nodeType":"57","messageId":"58","endLine":10,"endColumn":19},{"ruleId":"59","severity":1,"message":"60","line":34,"column":28,"nodeType":"61","messageId":"62","endLine":34,"endColumn":30},{"ruleId":"63","severity":2,"message":"64","line":60,"column":14,"nodeType":"57","messageId":"65","endLine":60,"endColumn":22},{"ruleId":"66","severity":2,"message":"67","line":61,"column":16,"nodeType":"68","endLine":61,"endColumn":24},{"ruleId":"55","severity":1,"message":"69","line":8,"column":9,"nodeType":"57","messageId":"58","endLine":8,"endColumn":13},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'stockData' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-undef","'myStocks' is not defined.","undef","react/jsx-no-undef","'StatsRow' is not defined.","JSXIdentifier","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]